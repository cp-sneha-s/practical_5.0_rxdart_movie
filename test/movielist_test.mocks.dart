// // Mocks generated by Mockito 5.0.17 from annotations
// // in rxdart_example/test/movielist_test.dart.
// // Do not manually edit this file.
//
// import 'dart:async' as _i4;
//
// import 'package:mockito/mockito.dart' as _i1;
// import 'package:rxdart_example/model/movie.dart' as _i2;
// import 'package:rxdart_example/resources/network_data_provider.dart' as _i3;
//
// // ignore_for_file: avoid_redundant_argument_values
// // ignore_for_file: avoid_setters_without_getters
// // ignore_for_file: comment_references
// // ignore_for_file: implementation_imports
// // ignore_for_file: invalid_use_of_visible_for_testing_member
// // ignore_for_file: prefer_const_constructors
// // ignore_for_file: unnecessary_parenthesis
// // ignore_for_file: camel_case_types
//
// class _FakeMovie_0 extends _i1.Fake implements _i2.Movie {}
//
// class _FakeMovieList_1 extends _i1.Fake implements _i2.MovieList {}
//
// /// A class which mocks [NetworkDataProvider].
// ///
// /// See the documentation for Mockito's code generation for more information.
// class MockNetworkDataProvider extends _i1.Mock
//     implements _i3.NetworkDataProvider {
//   MockNetworkDataProvider() {
//     _i1.throwOnMissingStub(this);
//   }
//
//   @override
//   _i2.Movie get movie => (super.noSuchMethod(Invocation.getter(#movie),
//       returnValue: _FakeMovie_0()) as _i2.Movie);
//   @override
//   set movie(_i2.Movie? _movie) =>
//       super.noSuchMethod(Invocation.setter(#movie, _movie),
//           returnValueForMissingStub: null);
//   @override
//   _i4.Future<_i2.MovieList> fetchMovieListFromApi() =>
//       (super.noSuchMethod(Invocation.method(#fetchMovieListFromApi, []),
//               returnValue: Future<_i2.MovieList>.value(_FakeMovieList_1()))
//           as _i4.Future<_i2.MovieList>);
//   @override
//   _i4.Future<_i2.Movie> fetchMoviebyId(String? id) =>
//       (super.noSuchMethod(Invocation.method(#fetchMoviebyId, [id]),
//               returnValue: Future<_i2.Movie>.value(_FakeMovie_0()))
//           as _i4.Future<_i2.Movie>);
// }
